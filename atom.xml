<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Docs as Magic</title>
    <subtitle>Александр Яковлев о технике и документации</subtitle>
    <link rel="self" type="application/atom+xml" href="https://alexjameson.github.io/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://alexjameson.github.io/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-08-28T00:00:00+00:00</updated>
    <id>https://alexjameson.github.io/atom.xml</id>
    <entry xml:lang="en">
        <title>Понимание веб-разработки: запросы к HTTP API</title>
        <published>2025-08-28T00:00:00+00:00</published>
        <updated>2025-08-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Александр Яковлев
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://alexjameson.github.io/articles/http-api-quickstart/"/>
        <id>https://alexjameson.github.io/articles/http-api-quickstart/</id>
        
        <content type="html" xml:base="https://alexjameson.github.io/articles/http-api-quickstart/">&lt;p&gt;Ключевой процесс в веб-разработке — это обмен данными через сеть. Практически любое взаимодействие в IT-системах — от просмотра страницы до развертывания приложения — строится на одном и том же: клиент запрашивает данные → сервер отвечает → клиент обрабатывает и отображает данные.&lt;&#x2F;p&gt;
&lt;p&gt;В серии статей мы пошагово разберём этот процесс, чтобы вы не просто видели результат, а понимали, что происходит на каждом этапе. Понимание этих процессов важно для технического писателя, который работает с продуктами для разработчиков, облачными сервисами или платформенными решениями.&lt;&#x2F;p&gt;
&lt;p&gt;Я буду ссылаться на теоретические материалы из журнала &lt;a href=&quot;https:&#x2F;&#x2F;thecode.media&#x2F;&quot;&gt;Код&lt;&#x2F;a&gt;, принадлежащего Яндекс Практикуму. В статьях из этого цикла делается упор на практику, а ссылки на внешние материалы помогут получить необходимый контекст. Вы можете ознакомиться с соответствующей теорией на любом ресурсе по вашему выбору, «Код» выбран исключительно из соображений удобства.&lt;&#x2F;p&gt;
&lt;p&gt;В серии будет три статьи, в которых разберем следующее:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Увидим, как устроено клиент-серверное взаимодействие;&lt;&#x2F;li&gt;
&lt;li&gt;Понаблюдаем за тем, как браузер получает и отображает данные, а также изучим структуру веб-страниц;&lt;&#x2F;li&gt;
&lt;li&gt;Развернем собственный локальный сервер, чтобы почувствовать, как работает веб изнутри.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;В первой статье мы познакомимся с основой основ — запросом к HTTP API и ответом сервера. HTTP до сих пор остается самым популярным протоколом для клиент-серверного взаимодействия, и понимание его работы поможет разобраться по аналогии с любым другим протоколом.&lt;&#x2F;p&gt;
&lt;p&gt;Использовать будем &lt;a href=&quot;https:&#x2F;&#x2F;curl.se&#x2F;&quot;&gt;curl&lt;&#x2F;a&gt; — простую, но мощную утилиту, доступную в любом терминале. Важно понимать: &lt;code&gt;curl&lt;&#x2F;code&gt; — это лишь один из способов. То же самое можно сделать через &lt;a href=&quot;https:&#x2F;&#x2F;www.postman.com&#x2F;&quot;&gt;Postman&lt;&#x2F;a&gt; или любой другой HTTP-клиент. Механика взаимодействия остаётся одной и той же, независимо от инструмента.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;theory&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#theory&quot; aria-label=&quot;Anchor link for: theory&quot;&gt;Теория: знакомство с HTTP API&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Перед тем как вы приступите к теории, запомните: какие-то части могут показаться слишком сложными и их, скорее всего, можно пропустить, чтобы вернуться к ним в будущем. Не стесняйтесь переходить к &lt;a href=&quot;https:&#x2F;&#x2F;alexjameson.github.io&#x2F;articles&#x2F;http-api-quickstart&#x2F;#practice&quot;&gt;практике&lt;&#x2F;a&gt;, если не теория не дается.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;API (Application Programming Interface)&lt;&#x2F;em&gt; — это контракт, определяющий, как одно приложение может взаимодействовать с другим. В контракте зафиксированы основные параметры: доступные методы, форматы запросов и ответов, аутентификация.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;HTTP API&lt;&#x2F;em&gt; — это интерфейс, использующий протокол HTTP&#x2F;HTTPS для передачи данных.&lt;&#x2F;p&gt;
&lt;p&gt;Данные передаются в формате JSON или XML. В данном цикле статей будет рассмотрен JSON.&lt;&#x2F;p&gt;
&lt;p&gt;Чаще всего HTTP API соответствует стилю REST, где ресурсы доступны по URL, а действия над ними выполняются через HTTP-методы.&lt;&#x2F;p&gt;
&lt;p&gt;Запрос и ответ сервера можно визуализировать следующим образом:&lt;&#x2F;p&gt;
&lt;script src=https:&#x2F;&#x2F;alexjameson.github.io&#x2F;js&#x2F;mermaid.js&gt;&lt;&#x2F;script&gt;

&lt;pre class=&quot;mermaid&quot;&gt;
  sequenceDiagram
    participant Клиент
    participant Сервер

    Клиент-&gt;&gt;Сервер: 1. Отправка HTTP-запроса
    Note right of Клиент: Метод (GET&#x2F;POST и т.д.)&lt;br&#x2F;&gt;URL, Заголовки, Тело

    Сервер-&gt;&gt;Сервер: 2. Обработка запроса
    Note right of Сервер: Проверка аутентификации,&lt;br&#x2F;&gt;подготовка данных для отправки

    Сервер-&gt;&gt;Клиент: 3. Отправка HTTP-ответа
    Note left of Сервер: Код статуса (200, 404 и т.д.)&lt;br&#x2F;&gt;Заголовки, Тело ответа

    Клиент-&gt;&gt;Клиент: 4. Обработка ответа и отображение данных
&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Подробнее:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thecode.media&#x2F;chto-takoe-api&#x2F;&quot;&gt;Что такое API&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thecode.media&#x2F;osi&#x2F;&quot;&gt;Что такое протокол&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thecode.media&#x2F;json&#x2F;&quot;&gt;Что такое формат JSON и как с ним работать&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;rest&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rest&quot; aria-label=&quot;Anchor link for: rest&quot;&gt;REST&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;em&gt;REST (Representational State Transfer)&lt;&#x2F;em&gt; — это архитектурный стиль, описывающий набор принципов построения API. В большинстве случаев HTTP API создается как RESTful API, но эти понятия не синонимичны.&lt;&#x2F;p&gt;
&lt;p&gt;Принципы REST достаточно просты и их немного, я выделю наиболее важные я первого знакомства:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Клиент и сервер независимы, общаются через API&lt;&#x2F;li&gt;
&lt;li&gt;Отсутствие состояния: Каждый запрос содержит всю необходимую информацию. Сервер не хранит состояние сессии.&lt;&#x2F;li&gt;
&lt;li&gt;Единообразие: API организован по ресурсам, с API работают с помощью стандартных HTTP-методов.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Клиент — это любая система или приложение, которое отправляет HTTP-запросы к серверу и использует его API. Это может быть браузер, сервер, мобильное приложение или любой другой инструмент, как управляемый напрямую человеком, так и нет.&lt;&#x2F;p&gt;
&lt;p&gt;Ресурсы — это любые сущности, например пользователи, посты или комментарии. К ним обращаются по соответствующим URL, например &lt;code&gt;api.example.com&#x2F;users&#x2F;1&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Подробнее:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thecode.media&#x2F;kak-ustroeny-api-razbiraemsya-na-primere-rest-api&#x2F;&quot;&gt;Как устроены API: разбираемся на примере REST API&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;query-structure&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#query-structure&quot; aria-label=&quot;Anchor link for: query-structure&quot;&gt;Структура запроса&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Ниже показана структура HTTP-запроса. Именно так он выглядит для самого протокола, но не все поля этого запроса нужны всегда, а в разных клиентах некоторые поля можно не заполнять. Например, в &lt;code&gt;curl&lt;&#x2F;code&gt; запрос без указанного метода будет считаться GET-запросом.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Метод и путь&lt;&#x2F;strong&gt;. Пример: &lt;code&gt;GET &#x2F;api&#x2F;v1&#x2F;users&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Заголовки (Headers)&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Host&lt;&#x2F;strong&gt;: адрес хоста и, опционально, номер порта;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Content-Type&lt;&#x2F;strong&gt;: тип данных в теле запроса (&lt;code&gt;application&#x2F;json&lt;&#x2F;code&gt;);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Authorization&lt;&#x2F;strong&gt;: токен доступа;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Accept&lt;&#x2F;strong&gt;: какие форматы ответа ожидает клиент;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;strong&gt;Тело (Body)&lt;&#x2F;strong&gt; — только для методов, предполагающих отправку данных (POST, PUT, PATCH). Пример: &lt;code&gt;{ &quot;name&quot;: &quot;Иван&quot;, &quot;email&quot;: &quot;ivan@example.com&quot; }&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;methods&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#methods&quot; aria-label=&quot;Anchor link for: methods&quot;&gt;Методы&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Следующие методы по умолчанию используются для действий с ресурсами в HTTP API:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;GET&lt;&#x2F;strong&gt;: Получение ресурса. Не должен менять состояние ресурса;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;POST&lt;&#x2F;strong&gt;: Создание нового ресурса;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PUT&lt;&#x2F;strong&gt;: Полное обновление ресурса;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PATCH&lt;&#x2F;strong&gt;: Частичное обновление;&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DELETE&lt;&#x2F;strong&gt; Удаление ресурса.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;practice&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#practice&quot; aria-label=&quot;Anchor link for: practice&quot;&gt;Практика: получаем и передаем данные&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;env&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#env&quot; aria-label=&quot;Anchor link for: env&quot;&gt;Настройка окружения&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Эта статья предполагает работу в терминале с поддержкой оболочки &lt;strong&gt;Bash&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;На &lt;strong&gt;Windows&lt;&#x2F;strong&gt; я рекомендую использовать &lt;strong&gt;Git Bash&lt;&#x2F;strong&gt;, который устанавливается вместе с &lt;a href=&quot;https:&#x2F;&#x2F;git-scm.com&#x2F;downloads&#x2F;win&quot;&gt;Git for Windows&lt;&#x2F;a&gt;. Если у вас есть другой предпочитаемый терминал, который поддерживает Bash, можно использовать его. Работа в PowerShell технически возможно, но это не рекомендуемый вариант.&lt;&#x2F;p&gt;
&lt;p&gt;На других операционных системах можно пользоваться любым встроенным терминалом, так как в UNIX-подобных системах Bash поддержан по умолчанию.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;jsonplaceholder&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#jsonplaceholder&quot; aria-label=&quot;Anchor link for: jsonplaceholder&quot;&gt;Выбор API&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;В качестве провайдера API будет использован сервис &lt;a href=&quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;&quot;&gt;JSONPlaceholder&lt;&#x2F;a&gt;. Это сервис, который предоставляет эмулятор API (mock API). В GET-запросах он отдает настоящие данные, а при POST-запросах он эмулирует ответ, аналогичный реальному ответу сервера. Из этого следует, что в этом API нельзя на самом деле модицифировать или удалять ресурсы, так что рассмотрены будут только GET- и POST-запросы.&lt;&#x2F;p&gt;
&lt;p&gt;Аутентификация в этом API не предусмотрена.&lt;&#x2F;p&gt;
&lt;p&gt;К сожалению, &lt;a href=&quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;guide&#x2F;&quot;&gt;документация&lt;&#x2F;a&gt; сервиса не доступна на территории России, но я верю, что при желании вы сможете решить эту проблему. Это будет полезно само по себе, но в сценариях ниже я привожу всю необходимую информацию для работы с этим API.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;JSONPlaceholder&lt;&#x2F;strong&gt; имеет 6 ресурсов:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Ресурс&lt;&#x2F;th&gt;&lt;th&gt;Путь&lt;&#x2F;th&gt;&lt;th&gt;Количество&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Посты&lt;&#x2F;td&gt;&lt;td&gt;&#x2F;posts&lt;&#x2F;td&gt;&lt;td&gt;100&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Комментарии&lt;&#x2F;td&gt;&lt;td&gt;&#x2F;comments&lt;&#x2F;td&gt;&lt;td&gt;500&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Альбомы&lt;&#x2F;td&gt;&lt;td&gt;&#x2F;albums&lt;&#x2F;td&gt;&lt;td&gt;100&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Фото&lt;&#x2F;td&gt;&lt;td&gt;&#x2F;photos&lt;&#x2F;td&gt;&lt;td&gt;5000&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Задачи&lt;&#x2F;td&gt;&lt;td&gt;&#x2F;todos&lt;&#x2F;td&gt;&lt;td&gt;200&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Пользователи&lt;&#x2F;td&gt;&lt;td&gt;&#x2F;users&lt;&#x2F;td&gt;&lt;td&gt;10&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;Ссылка на первый пост выглядит так: &lt;code&gt;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;posts&#x2F;1&lt;&#x2F;code&gt;. Ссылка на комментарий с номером 500 выглядит так: &lt;code&gt;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;comments&#x2F;500&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;get&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#get&quot; aria-label=&quot;Anchor link for: get&quot;&gt;GET-запросы&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Рассмотрим разные сценарии получения и обработки данных.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;status&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#status&quot; aria-label=&quot;Anchor link for: status&quot;&gt;Получение состояния ресурса&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;В первом запросе проверяем состояние самого сервера. Это будет GET-запрос, хотя явно в &lt;code&gt;curl&lt;&#x2F;code&gt; это не указывается. Также не указывается большинство других частей запроса, которые разбирались в &lt;a href=&quot;https:&#x2F;&#x2F;alexjameson.github.io&#x2F;articles&#x2F;http-api-quickstart&#x2F;#query-structure&quot;&gt;соответствующей секции&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Для проверки статуса используется &lt;em&gt;флаг&lt;&#x2F;em&gt; &lt;code&gt;-I&lt;&#x2F;code&gt;, который запрашивает только заголовки HTTP-ответа и не скачивает тело запроса:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -I&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;jsonplaceholder.typicode.com
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Начало ответа должно выглядеть следующим образом:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;HTTP&#x2F;2&lt;&#x2F;span&gt;&lt;span&gt; 200
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date:&lt;&#x2F;span&gt;&lt;span&gt; Wed, 27 Aug 2025 22:08:27 GMT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;content-type:&lt;&#x2F;span&gt;&lt;span&gt; text&#x2F;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;UTF-8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Код &lt;code&gt;200&lt;&#x2F;code&gt; в первой строке говорит о том, что запрос выполнен успешно.&lt;&#x2F;p&gt;
&lt;p&gt;Далее попробуем получить состояние заведомо недоступного ресурса:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -I &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;posts&#x2F;9999&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Сервер принял запрос, но вернул другой ответ:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;HTTP&#x2F;2&lt;&#x2F;span&gt;&lt;span&gt; 404
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;date:&lt;&#x2F;span&gt;&lt;span&gt; Wed, 27 Aug 2025 22:31:44 GMT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;content-type:&lt;&#x2F;span&gt;&lt;span&gt; application&#x2F;json&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ed9366;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;utf-8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Код &lt;code&gt;404&lt;&#x2F;code&gt; говорит об отсутствии запрашиваемого ресурса на сервере.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Подробнее:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;thecode.media&#x2F;error-404&#x2F;&quot;&gt;Почему иногда вместо сайтов мы видим разные ошибки сервера&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;query-data&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#query-data&quot; aria-label=&quot;Anchor link for: query-data&quot;&gt;Получение данных&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Отправляем GET-запрос к &lt;strong&gt;JSONPlaceholder&lt;&#x2F;strong&gt; для получения содержимого поста с &lt;code&gt;id=1&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;posts&#x2F;1&amp;quot; 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ожидаемые ответ с соедржимым поста, не несущим особой смысловой нагрузки:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;userId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;sunt aut facere repellat provident...&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;body&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;quia et suscipit...&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Стоит также отправить запросы к другим ресурсам. Можно выбрать любые ресурсы в том диапазоне, который был указан в &lt;a href=&quot;https:&#x2F;&#x2F;alexjameson.github.io&#x2F;articles&#x2F;http-api-quickstart&#x2F;#jsonplaceholder&quot;&gt;таблице выше&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Например:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;users&#x2F;10&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Информации о пользователях намного больше:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Clementina DuBuque&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;username&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Moriah.Stanton&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;email&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Rey.Padberg@karina.biz&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;address&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;street&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Kattie Turnpike&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;suite&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Suite 198&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;city&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Lebsackbury&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;zipcode&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;31428-2261&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;geo&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;lat&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;-38.2386&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;lng&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;57.2232&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;phone&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;024-648-3804&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;website&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ambrose.net&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;company&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Hoeger LLC&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;catchPhrase&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Centralized empowering task-force&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;bs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;target end-to-end models&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Рекомендую запросить аналогичным образом ресурсы всех типов.&lt;&#x2F;p&gt;
&lt;h4 id=&quot;nested-resources&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#nested-resources&quot; aria-label=&quot;Anchor link for: nested-resources&quot;&gt;Работа с вложенными ресурсами&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;strong&gt;JSONPlaceholder&lt;&#x2F;strong&gt; поддерживает иерархические маршруты, отражающие связи между ресурсами.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;У постов есть комментарии, доступные по следущему пути: &lt;code&gt;&#x2F;posts&#x2F;&amp;lt;номер&amp;gt;&#x2F;comments&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;В альбомах есть фотографии: &lt;code&gt;&#x2F;albums&#x2F;&amp;lt;номер&amp;gt;&#x2F;photos&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;У пользователей есть альбомы, задачи и посты:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#x2F;users&#x2F;&amp;lt;номер&amp;gt;&#x2F;albums&lt;&#x2F;code&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;&#x2F;users&#x2F;&amp;lt;номер&amp;gt;&#x2F;todos&lt;&#x2F;code&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;&#x2F;users&#x2F;&amp;lt;номер&amp;gt;&#x2F;posts&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Попробуем запросить не просто отдельный ресурс, а все комментарии к посту 42:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;posts&#x2F;42&#x2F;comments&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ответ будет выглядеть как массив с объектами, начинающийся так:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;postId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;42&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;206&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;deserunt eveniet quam vitae velit&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;email&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Sophie@antoinette.ca&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;body&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;nam iusto minus expedita numquam&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;et id quis&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;voluptatibus minima porro facilis dolores beatae aut sit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;aut quia suscipit&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;postId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;42&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;207&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;asperiores sed voluptate est&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;email&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Jessika@crystel.ca&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;body&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;nulla quos harum commodi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;aperiam qui et dignissimos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;reiciendis ut quia est corrupti itaque&lt;&#x2F;span&gt;&lt;span style=&quot;color:#4cbf99;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;laboriosam debitis suscipit&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f51818;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Далее проверим более сложное сочетание — сначала получим список всех альбомов пользователя, а потом посмотрим, какие фотографии принадлежат этому пользователю:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;users&#x2F;3&#x2F;albums&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;В ответе будет множество альбомов этомго пользователя. &lt;code&gt;id&lt;&#x2F;code&gt; в данном случае это идентификатор альбома:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;userId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;21&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;repudiandae voluptatem optio est consequatur rem in temporibus et&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;userId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;22&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;et rem non provident vel ut&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;userId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;23&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;incidunt quisquam hic adipisci sequi&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f51818;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Зная, что пользователю принадлежит альбом с &lt;code&gt;id=21&lt;&#x2F;code&gt;, запросим фотографии из этого альбома:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;albums&#x2F;21&#x2F;photos&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Получим массив фотогрфий, начинащийся так:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;albumId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;21&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1001&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;velit corrupti odio suscipit rerum&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;url&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;via.placeholder.com&#x2F;600&#x2F;a91759&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;thumbnailUrl&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;via.placeholder.com&#x2F;150&#x2F;a91759&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;albumId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;21&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1002&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;eveniet expedita est est amet doloremque facilis velit at&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;url&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;via.placeholder.com&#x2F;600&#x2F;a8d0f4&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;thumbnailUrl&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;via.placeholder.com&#x2F;150&#x2F;a8d0f4&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f51818;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;В последнем примере пришлось сделать два отдельных запроса, чтобы получить один из наборов фотографий пользователя. Как правило, в реальных API поддерживается более глубокая вложенность.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h4 id=&quot;filtering&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#filtering&quot; aria-label=&quot;Anchor link for: filtering&quot;&gt;Фильтрация с помощью параметров&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;
&lt;p&gt;До этого мы получали данные, используя уникальный &lt;em&gt;ключ&lt;&#x2F;em&gt; — числовой идентификатор ресурса. Но часто бывает нужно найти ресурс, имея только одну его характеристику. Это можно сделать с помощью запросов с параметрами (&lt;em&gt;query-параметрами&lt;&#x2F;em&gt;). Параметры указываются в URL после имени ресурса следующим образом: &lt;code&gt;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;&amp;lt;ресурс&amp;gt; ? &amp;lt;параметр&amp;gt; = &amp;lt;значение&amp;gt;&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Используем query-параметры для поиска всех незавершённых задач пользователя с &lt;code&gt;userId=1&lt;&#x2F;code&gt;. Для этого нужно указать &lt;code&gt;completed=false&lt;&#x2F;code&gt; для ресурса &lt;code&gt;&#x2F;todos&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;todos?userId=1&amp;amp;completed=false&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ответ:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;userId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;delectus aut autem&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;completed&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;userId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;quis ut nam facilis et officia qui&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;completed&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;userId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;fugiat veniam minus&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;completed&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span&gt;  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#f51818;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Попробуйте воспользоваться знанием устройства API, чтобы найти следующее:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Все альбомы, принадлежащие пользователю с &lt;code&gt;userId=5&lt;&#x2F;code&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Все комментарии к посту с &lt;code&gt;postId=73&lt;&#x2F;code&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Единственного пользователя, у которого &lt;code&gt;email=Sincere@april.biz&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;post&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#post&quot; aria-label=&quot;Anchor link for: post&quot;&gt;POST-запросы&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Запросы этого типа используются для передачи данных. Напомню, что в &lt;strong&gt;JSONPlaceholder&lt;&#x2F;strong&gt; POST-запросы имитируются, ресурсы на самом деле не создаются, но ответ от сервера приходит точно такой, как при выполнении настоящих запросов.&lt;&#x2F;p&gt;
&lt;p&gt;POST-запросы в &lt;code&gt;curl&lt;&#x2F;code&gt; требуют указания большего колчества параметров:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Метод, указанный с помощью флага &lt;code&gt;-X&lt;&#x2F;code&gt;, после которого указывается URL ресурса;&lt;&#x2F;li&gt;
&lt;li&gt;Тип данных, указанный с помощью флага &lt;code&gt;-H&lt;&#x2F;code&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Тело запроса с помощью флага &lt;code&gt;-d&lt;&#x2F;code&gt;. Так как тип данных в данном случае это &lt;code&gt;application&#x2F;json&lt;&#x2F;code&gt;, передаваемые данные должны быть в формате JSON.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Попробуем создать новый пост, автором которого будет пользователь с &lt;code&gt;userId=1&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -X&lt;&#x2F;span&gt;&lt;span&gt; POST &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;posts&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;     -H &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Content-Type: application&#x2F;json&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;     -d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;quot;title&amp;quot;: &amp;quot;Мой пост&amp;quot;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;quot;body&amp;quot;: &amp;quot;Это содержимое поста&amp;quot;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;quot;userId&amp;quot;: 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     }&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Так как в API уже есть 100 ресурсов такого типа, у нового поста &lt;code&gt;id=101&lt;&#x2F;code&gt;. Ответ в формате JSON:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Мой пост&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;body&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Это содержимое поста&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;userId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;101
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Далее создадим новый комментарий, отправленный пользователем с именем Иван к первому посту:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -X&lt;&#x2F;span&gt;&lt;span&gt; POST &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;comments&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;     -H &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Content-Type: application&#x2F;json&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;     -d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;quot;name&amp;quot;: &amp;quot;Иван&amp;quot;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;quot;email&amp;quot;: &amp;quot;ivan@example.com&amp;quot;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;quot;body&amp;quot;: &amp;quot;Отличная статья!&amp;quot;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;quot;postId&amp;quot;: 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     }&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ответ:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Иван&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;email&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ivan@example.com&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;body&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Отличная статья!&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;postId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;501
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Напоследок создадим новую задачу:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;curl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt; -X&lt;&#x2F;span&gt;&lt;span&gt; POST &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;jsonplaceholder.typicode.com&#x2F;todos&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;     -H &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Content-Type: application&#x2F;json&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;     -d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;quot;title&amp;quot;: &amp;quot;Изучить POST-запросы&amp;quot;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;quot;completed&amp;quot;: true,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;       &amp;quot;userId&amp;quot;: 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;     }&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Ответ:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;json&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-json &quot;&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;Изучить POST-запросы&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;completed&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;userId&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;id&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;201
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;На этом заканчивается знакомство с основами HTTP-запросов.&lt;&#x2F;p&gt;
&lt;p&gt;В следующих статьях рассмотрим подробнее другие аспекты клиент-серверного взаимодействия.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Навыки технического писателя</title>
        <published>2025-08-15T00:00:00+00:00</published>
        <updated>2025-08-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Александр Яковлев
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://alexjameson.github.io/articles/soft-and-hard-skills/"/>
        <id>https://alexjameson.github.io/articles/soft-and-hard-skills/</id>
        
        <content type="html" xml:base="https://alexjameson.github.io/articles/soft-and-hard-skills/">&lt;p&gt;В этой статье я постараюсь описать то, как я вижу набор навыков для профессионала в нашей отрасли. Можно рассматривать эту статью как чеклист, но ни в коем случае не как карту развития, матрицу компетенций или исчерпывающее руководство по профессии.&lt;&#x2F;p&gt;
&lt;p&gt;В этой статье речь идет о технических писателях, чьими непосредственными адресатами являются конечные пользователи программных продуктов. Я мало знаю о людях, занимающихся составлением проектной документации, не представляю себе процесс подготовки документов для ФСТЭК или Минцифры, никогда не работал с ГОСТ любых серий, и уже много лет не писал ничего для не технических пользователей.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hard-skills-i-soft-skills&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#hard-skills-i-soft-skills&quot; aria-label=&quot;Anchor link for: hard-skills-i-soft-skills&quot;&gt;Hard Skills и Soft Skills&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Я бы сказал, что ключевое различие между этими навыками заключается в том, что hard skills можно развивать самостоятельно и оценивать их прогресс, а soft skills в первую очередь приобретаются с опытом. Курсы и другие способы  развития soft skills, конечно, существуют, но их значимость возрастает для специалистов старших грейдов.&lt;&#x2F;p&gt;
&lt;p&gt;Но есть еще более важная деталь. В нашей профессии грань между hard и soft skills достаточно условна, потому что технический писатель описывает работу своих коллег. Для выполнения своих непосредственных обязанностей мы не можем не коммуницировать с людьми и не думать о циркуляции знаний в организации.&lt;&#x2F;p&gt;
&lt;script src=https:&#x2F;&#x2F;alexjameson.github.io&#x2F;js&#x2F;mermaid.js&gt;&lt;&#x2F;script&gt;

&lt;pre class=&quot;mermaid&quot;&gt;
  graph LR
    A[Технический писатель] --&gt; B[Hard Skills]
    A --&gt; C[Soft Skills]

    B --&gt; D[Работа с текстом]
    B --&gt; E[Владение предметной областью]
    B --&gt; F[Владение инструментами]
    B --&gt; G[Управление знаниями]

    C --&gt; J[Получение информации от экспертов]
    C --&gt; L[Эмпатия к пользователям]
    C --&gt; M[Деловое общение, переговоры&lt;br&#x2F;&gt;личная эффективность,&lt;br&#x2F;&gt;обратная связь, планирование]
&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Мне не попадались хорошие переводы этих терминов. Я бы сказал, что hard skills — это технические навыки, особенно когда речь идет об инженерах и разработчиках. Это то, что нужно каждому отдельному специалисту для выполнения своей работы.&lt;&#x2F;p&gt;
&lt;p&gt;Soft skills я бы перевел как социальные навыки. Эти навыки характеризуют работу в команде и социальное взаимодействие, и позволяют выполнять работу эффективнее.&lt;&#x2F;p&gt;
&lt;p&gt;В этой статье для простоты я оставлю англоязычные термины.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;hard-skills&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#hard-skills&quot; aria-label=&quot;Anchor link for: hard-skills&quot;&gt;Hard Skills&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Hard skills можно изучать, развивать и измерять прогресс во владении. Не обязательно знать их все, достаточно иметь о них представление, чтобы при случае быстро ими овладеть. Я выделяю 4 основные подгруппы:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;rabota-s-tekstom&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rabota-s-tekstom&quot; aria-label=&quot;Anchor link for: rabota-s-tekstom&quot;&gt;Работа с текстом&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Грамотное письмо (орфография, пунктуация, синтаксис);&lt;&#x2F;li&gt;
&lt;li&gt;Владение разными стилями речи и умение выбирать подходящий стиль для задачи;&lt;&#x2F;li&gt;
&lt;li&gt;Соблюдение стайлгайдов (внутренних и внешних);&lt;&#x2F;li&gt;
&lt;li&gt;Редактура: проверка логики, структуры, терминологии;&lt;&#x2F;li&gt;
&lt;li&gt;Адаптация текста под разные аудитории (новички, эксперты, специалисты разных направлений);&lt;&#x2F;li&gt;
&lt;li&gt;Понимание топологии &lt;a href=&quot;https:&#x2F;&#x2F;diataxis.fr&#x2F;&quot;&gt;Diataxis&lt;&#x2F;a&gt; и знание о других типах документов;&lt;&#x2F;li&gt;
&lt;li&gt;Создание шаблонов типовых документов.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;vladenie-predmetnoi-oblast-iu&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vladenie-predmetnoi-oblast-iu&quot; aria-label=&quot;Anchor link for: vladenie-predmetnoi-oblast-iu&quot;&gt;Владение предметной областью&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Чтобы писать о технологии, нужно понимать, какие задачи стоят перед пользователями, что они хотят сделать с помощью описываемого продукта. Далеко не для всех перечисленных ниже пунктов нужно иметь практический опыт, по большей части хватит уверенного владения теорией.&lt;&#x2F;p&gt;
&lt;p&gt;Напомню, что я говорю в первую очередь о технических писателях, составляющих документацию для технических специалистов. Следующий список даст базовое понимание веб-разработки:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Базовое понимание программирования на любом популярном языке. Моя рекомендация — Python, хотя первым языком у меня был JavaScript;&lt;&#x2F;li&gt;
&lt;li&gt;Работа с API, в первую очередь понимание REST API, реализуемого с помощью протокола HTTP;&lt;&#x2F;li&gt;
&lt;li&gt;Понимание клиент-серверного взаимодействия, различия бэкенда и фронтенда;&lt;&#x2F;li&gt;
&lt;li&gt;Понимание работы сети, можно начать с концепций IP-адресов и DNS на базовом уровне и продолжать почти до бесконечности;&lt;&#x2F;li&gt;
&lt;li&gt;Основы СУБД;&lt;&#x2F;li&gt;
&lt;li&gt;Знакомство с Linux.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Подробнее эти навыки и знания будут рассмотрены в отдельной статье.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;vladenie-instrumentami-tekhnicheskogo-pisatelia&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#vladenie-instrumentami-tekhnicheskogo-pisatelia&quot; aria-label=&quot;Anchor link for: vladenie-instrumentami-tekhnicheskogo-pisatelia&quot;&gt;Владение инструментами технического писателя&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Я считаю инструменты наименее важной частью компетенций технического писателя. При этом, они легче всего поддаются изучению и их любят указывать в вакансиях. Но я рекомендую не забывать о том, что технического писателя нанимают для донесения знаний до аудитории, а как именно это произойдет — как минимум вторично, пусть и с некоторыми оговорками.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Docs as Code&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;Системы контроля версий и связанные платформы — Git, GitHub, GitLab;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;alexjameson.github.io&#x2F;articles&#x2F;soft-and-hard-skills&#x2F;ssg-comparison.md&quot;&gt;Генераторы статических сайтов&lt;&#x2F;a&gt; (SSG) — Docusaurus, MkDocs, Sphinx и другие;&lt;&#x2F;li&gt;
&lt;li&gt;Языки разметки — Markdown, reStructuredText, AsciiDoc;&lt;&#x2F;li&gt;
&lt;li&gt;Генерация документации к API — Swagger &#x2F; OpenAPI;&lt;&#x2F;li&gt;
&lt;li&gt;Прочие инструменты и утилиты, которые помогают работать с исходниками, например Pandoc.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Платформы для совместного ведения документации&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;Confluence;&lt;&#x2F;li&gt;
&lt;li&gt;Wiki-системы;&lt;&#x2F;li&gt;
&lt;li&gt;Инструменты, подобные Notion или Gramax.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Офисные инструменты&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;Microsoft Word и Google docs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Создание графического контента&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;Обработка скриншотов — Snagit, GIMP и другие по выбору;&lt;&#x2F;li&gt;
&lt;li&gt;Схемы и диаграммы — Mermaid, PlantUML, draw.io, Figma.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Работа с ИИ-инструментами&lt;&#x2F;strong&gt;.&lt;br&#x2F;&gt;
Сейчас еще сложно выделить какие-то универсальные инструменты, подходящие для всех ситуаций.
Типичные задачи — переписывание сложных формулировок, проверка текста и создание черновиков.
Выбирайте модель под свои задачи, не забывая о безопасности.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;upravlenie-znaniiami&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#upravlenie-znaniiami&quot; aria-label=&quot;Anchor link for: upravlenie-znaniiami&quot;&gt;Управление знаниями&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Управление знаниями — это системный подход к тому, как информация появляется, хранится, обновляется и используется в организации. Этот навык частично попадает в категорию soft skills, так как получение и распространение знаний напрямую связано с общением с коллегами.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Поиск и сбор знаний&lt;&#x2F;strong&gt; — выявление &quot;информационных островов&quot; (чаты, коммиты, внутренние-вики);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Структурирование&lt;&#x2F;strong&gt; — создание шаблонов, категорий, меток, унификация представления;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Актуализация&lt;&#x2F;strong&gt; — регулярная проверка и обновление контента в условиях работы с неполной и противоречивой информацией;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Обеспечение доступности&lt;&#x2F;strong&gt; — размещение информации там, где ее можно найти;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Владение информацией о процессах&lt;&#x2F;strong&gt; — понимание того, как устроен процесс разработки и релиза в команде.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;soft-skills&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#soft-skills&quot; aria-label=&quot;Anchor link for: soft-skills&quot;&gt;Soft Skills&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Soft skills — это личностные качества и поведенческие навыки. Я считаю, что они, во-первых, развиваются с опытом, а во-вторых, выводятся из нескольких простых принципов, например общаться с коллегами уважительно, работать над обратной связью, брать на себя ответственность и обеспечивать прозрачность.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kommunikatsiia-s-ekspertami&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#kommunikatsiia-s-ekspertami&quot; aria-label=&quot;Anchor link for: kommunikatsiia-s-ekspertami&quot;&gt;Коммуникация с экспертами&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Умение задавать точные, конкретные вопросы, чтобы получить нужную информацию;&lt;&#x2F;li&gt;
&lt;li&gt;Выстраивание доверия с разработчиками, менеджерами, архитекторами и другими стейкхолдерами;&lt;&#x2F;li&gt;
&lt;li&gt;Адаптация стиля общения под собеседника;&lt;&#x2F;li&gt;
&lt;li&gt;Влияние на людей без формальных полномочий.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Пример:&lt;br &#x2F;&gt;
Вместо &quot;Расскажите про API&quot; —&lt;br &#x2F;&gt;
&quot;Какие методы чаще всего используются? В каких случаях возвращается ошибка 403?&quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;empatiia-k-pol-zovateliam&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#empatiia-k-pol-zovateliam&quot; aria-label=&quot;Anchor link for: empatiia-k-pol-zovateliam&quot;&gt;Эмпатия к пользователям&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Понимание контекста использования;&lt;&#x2F;li&gt;
&lt;li&gt;Предвидение вопросов и ошибок;&lt;&#x2F;li&gt;
&lt;li&gt;Быть в мире пользователя (по Ильяхову);&lt;&#x2F;li&gt;
&lt;li&gt;Работать с обратной связью от пользователей в любой доступной форме.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Пример:&lt;br &#x2F;&gt;
Для DevOps: &quot;Передайте токен в заголовок &lt;code&gt;Authorization&lt;&#x2F;code&gt;&quot;&lt;br &#x2F;&gt;
Для бизнес-пользователя: &quot;Где найти токен и как его использовать&quot;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;obshchie-professional-nye-navyki&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#obshchie-professional-nye-navyki&quot; aria-label=&quot;Anchor link for: obshchie-professional-nye-navyki&quot;&gt;Общие профессиональные навыки&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Навык&lt;&#x2F;th&gt;&lt;th&gt;Как проявляется&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Переговоры&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;Умение договариваться о времени, приоритетах, формате ревью&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Деловое общение&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;Четкие письма, запросы, отчеты. Без воды и с конкретной целью&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Планирование&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;Управление задачами, сроками, приоритетами. Работа с бэклогом&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Обратная связь&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;Умение давать и принимать фидбэк в корректной форме&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Личная эффективность&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;Способность ориентироваться в организации, брать инициативу при наличии недостатков в документации,&lt;br&#x2F;&gt;работать в условиях высокой неопределенности и частых изменений&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;dopolnitel-nye-navyki-zona-rosta&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#dopolnitel-nye-navyki-zona-rosta&quot; aria-label=&quot;Anchor link for: dopolnitel-nye-navyki-zona-rosta&quot;&gt;Дополнительные навыки: зона роста&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Есть несколько групп навыков, которые были бы полезны как hard skills технического писателя, но относятся к другим специальностям. Можно сказать, что такие навыки обеспечивают рост через T-shaping.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dizain-i-ux&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#dizain-i-ux&quot; aria-label=&quot;Anchor link for: dizain-i-ux&quot;&gt;Дизайн и UX&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Часто технический писатель — это последний человек внутри команды, который сможет посмотреть на продукт «глазами пользователя» и поработать с ним перед релизом.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Построение пути пользователя&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;Как пользователь приходит к решению?&lt;&#x2F;li&gt;
&lt;li&gt;Где он теряется? Где ищет помощь?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Проектирование структуры сайта документации&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;Логичная структура контента;&lt;&#x2F;li&gt;
&lt;li&gt;Правильная навигация;&lt;&#x2F;li&gt;
&lt;li&gt;Поиск, фильтры, рекомендации.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Работа с текстами интерфейса&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;Правильные тексты для кнопок, ошибок и подсказок;&lt;&#x2F;li&gt;
&lt;li&gt;Понятные и унифицированные с документацией формулировки.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;testirovanie&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#testirovanie&quot; aria-label=&quot;Anchor link for: testirovanie&quot;&gt;Тестирование&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Технический писатель может и должен предоставлять актуальную и фактически достоверную документацию. Я бы отнес базовые навыки тестирования к необходимым, но для роста можно использовать профессиональные навыки ручных тестировщиков, например создание тестовых сценариев и оформление найденных ошибок в установленных форматах.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Работают ли примеры кода?&lt;&#x2F;li&gt;
&lt;li&gt;Можно ли выполнить инструкцию шаг за шагом?&lt;&#x2F;li&gt;
&lt;li&gt;Где пользователь может ошибиться?&lt;&#x2F;li&gt;
&lt;li&gt;Какие шаги можно упростить?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;analitika&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#analitika&quot; aria-label=&quot;Anchor link for: analitika&quot;&gt;Аналитика&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Чтобы понимать, насколько хорошо документация на самом деле решает задачи пользователей, имеет смысл посмотреть на реальные данные об этом.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Веб-аналитика&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;Google Analytics, Яндекс Метрика;&lt;&#x2F;li&gt;
&lt;li&gt;Популярные страницы, время на странице, отказы;&lt;&#x2F;li&gt;
&lt;li&gt;Поисковые запросы на сайте с документацией.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Метрики качества&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;Количество обращений в поддержку по теме;&lt;&#x2F;li&gt;
&lt;li&gt;Частота обновлений страницы;&lt;&#x2F;li&gt;
&lt;li&gt;Отзывы пользователей.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Если страница с высоким трафиком имеет 90% отказов — нужно улучшать структуру.&lt;&#x2F;li&gt;
&lt;li&gt;Если в поиске часто ищут «ошибка 403» — добавить раздел с рекомендациями по исправлению ошибок.&lt;&#x2F;li&gt;
&lt;li&gt;Если страница редко обновляется, но много читают — проверить актуальность.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;docops&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#docops&quot; aria-label=&quot;Anchor link for: docops&quot;&gt;DocOps&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;DocOps — это DevOps для документации. Это обеспечение надежности, скорости работы и расширение возможностей инструментов.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Автоматизация проверок&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;Орфография — с помощью &lt;a href=&quot;https:&#x2F;&#x2F;alexjameson.github.io&#x2F;articles&#x2F;soft-and-hard-skills&#x2F;.&#x2F;ssg-comparison&#x2F;&quot;&gt;Cspell&lt;&#x2F;a&gt; или &lt;a href=&quot;https:&#x2F;&#x2F;vale.sh&#x2F;&quot;&gt;Vale&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Форматирование — &lt;a href=&quot;https:&#x2F;&#x2F;prettier.io&#x2F;&quot;&gt;Prettier&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;markdownlint&#x2F;markdownlint&quot;&gt;Markdownlint&lt;&#x2F;a&gt;;&lt;&#x2F;li&gt;
&lt;li&gt;Проверка битых ссылок.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Интеграция в CI&#x2F;CD&lt;&#x2F;strong&gt;:
&lt;ul&gt;
&lt;li&gt;Сборка документации при каждом коммите;&lt;&#x2F;li&gt;
&lt;li&gt;Проверка на наличие ключевых элементов.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Собственные плагины, скрипты и инструменты&lt;&#x2F;strong&gt;, от сниппетов в любимом редакторе до расширений существующих генераторов.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Локализация чисел, валют и дат</title>
        <published>2025-07-29T00:00:00+00:00</published>
        <updated>2025-07-29T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Александр Яковлев
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://alexjameson.github.io/articles/localization/"/>
        <id>https://alexjameson.github.io/articles/localization/</id>
        
        <content type="html" xml:base="https://alexjameson.github.io/articles/localization/">&lt;p&gt;Форматирование влияет на восприятие и доверие к информации, особенно представленной в документации. Это простая вещь, но в ней есть нюансы.&lt;&#x2F;p&gt;
&lt;p&gt;Цель этой статьи — дать простое и понятное объяснение процесса локализации чисел, валют и дат в переведенных или изначально написанных на английском текстах. В качестве примеров используется наиболее популярная локаль &lt;code&gt;en-US&lt;&#x2F;code&gt;, а в качестве валют — доллары (USD).&lt;&#x2F;p&gt;
&lt;p&gt;Для веб-платформ существуют единые стандарты отображения данных:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;JavaScript&#x2F;Reference&#x2F;Global_Objects&#x2F;Intl&quot;&gt;Intl API&lt;&#x2F;a&gt; в браузерах и JavaScript (часть стандарта &lt;a href=&quot;https:&#x2F;&#x2F;262.ecma-international.org&#x2F;&quot;&gt;ECMAScript&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cldr.unicode.org&#x2F;&quot;&gt;Unicode CLDR&lt;&#x2F;a&gt; (Common Locale Data Repository) - универсальный стандарт, лежащий в основе &lt;code&gt;Intl API&lt;&#x2F;code&gt;. &lt;code&gt;Intl.NumberFormat&lt;&#x2F;code&gt;, &lt;code&gt;Intl.DateTimeFormat&lt;&#x2F;code&gt; и другие компоненты этого API используют локализационные данные из Unicode CLDR.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;code&gt;Intl&lt;&#x2F;code&gt; поддерживается всеми современными браузерами и по умолчанию применяется для локализации контента. За счет использования данных из Unicode CLDR этот механизм также обеспечивает соответствие национальным стандартам — ISO, ГОСТ и прочим.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;interaktivnyi-primer&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#interaktivnyi-primer&quot; aria-label=&quot;Anchor link for: interaktivnyi-primer&quot;&gt;Интерактивный пример&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Для простоты при выборе локали предполагается, что в локали &lt;code&gt;Ru&lt;&#x2F;code&gt; валюта — это рубли, а в &lt;code&gt;En&lt;&#x2F;code&gt; — доллары. О некоторых особенностях форматирования валют в разных локалях рассказано далее.&lt;&#x2F;p&gt;
&lt;div class=&quot;currency-container&quot;&gt;
    &lt;div class=&quot;selectors&quot;&gt;
        &lt;select id=&quot;typeSelector&quot;&gt;
            &lt;option value=&quot;number&quot;&gt;Число&lt;&#x2F;option&gt;
            &lt;option value=&quot;currency&quot; selected&gt;Валюта&lt;&#x2F;option&gt;
            &lt;option value=&quot;date&quot;&gt;Дата&lt;&#x2F;option&gt;
        &lt;&#x2F;select&gt;
        &lt;select id=&quot;localeSelector&quot;&gt;
            &lt;option value=&quot;ru&quot; selected&gt;Ru&lt;&#x2F;option&gt;
            &lt;option value=&quot;en&quot;&gt;En&lt;&#x2F;option&gt;
        &lt;&#x2F;select&gt;
    &lt;&#x2F;div&gt;
    &lt;div class=&quot;fields&quot;&gt;
        &lt;input type=&quot;text&quot; id=&quot;inputField&quot; placeholder=&quot;Введите значение&quot;&gt;
        &lt;input type=&quot;text&quot; id=&quot;outputField&quot; placeholder=&quot;Результат&quot;readonly&gt;
    &lt;&#x2F;div&gt;
    &lt;button type=&quot;button&quot; class=&quot;format-btn&quot; onclick=&quot;formatValue()&quot;&gt;Форматировать&lt;&#x2F;button&gt;
    &lt;div id=&quot;errorMessage&quot; class=&quot;error&quot;&gt;&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;kak-formatirovat-chisla-valiuty-i-daty&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#kak-formatirovat-chisla-valiuty-i-daty&quot; aria-label=&quot;Anchor link for: kak-formatirovat-chisla-valiuty-i-daty&quot;&gt;Как форматировать числа, валюты и даты&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Будут рассмотрены локали &lt;code&gt;ru-RU&lt;&#x2F;code&gt; и &lt;code&gt;en-US&lt;&#x2F;code&gt;. Подробнее о числах и валютах см. &lt;a href=&quot;https:&#x2F;&#x2F;cldr.unicode.org&#x2F;translation&#x2F;number-currency-formats&#x2F;number-and-currency-patterns&quot;&gt;CLDR: Number and currency patterns&lt;&#x2F;a&gt;, о датах — &lt;a href=&quot;https:&#x2F;&#x2F;cldr.unicode.org&#x2F;translation&#x2F;date-time&#x2F;date-time-patterns&quot;&gt;CLDR: Date&#x2F;Time Patterns&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;chisla-i-valiuty&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#chisla-i-valiuty&quot; aria-label=&quot;Anchor link for: chisla-i-valiuty&quot;&gt;Числа и валюты&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;В &lt;code&gt;ru-RU&lt;&#x2F;code&gt; используется &lt;strong&gt;запятая&lt;&#x2F;strong&gt; как разделитель дробной части и &lt;strong&gt;пробел&lt;&#x2F;strong&gt; для тысяч.&lt;&#x2F;li&gt;
&lt;li&gt;В &lt;code&gt;en-US&lt;&#x2F;code&gt; — &lt;strong&gt;точка&lt;&#x2F;strong&gt; для дробной части и &lt;strong&gt;запятая&lt;&#x2F;strong&gt; для тысяч.&lt;&#x2F;li&gt;
&lt;li&gt;Символ для обозначения валюты ставится &lt;strong&gt;перед&lt;&#x2F;strong&gt; числом без пробела в англоязычной среде, а в русскоязычной — &lt;strong&gt;после&lt;&#x2F;strong&gt; и с пробелом.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Категория&lt;&#x2F;th&gt;&lt;th&gt;&lt;code&gt;ru-RU&lt;&#x2F;code&gt;&lt;&#x2F;th&gt;&lt;th&gt;&lt;code&gt;en-US&lt;&#x2F;code&gt;&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Число&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;1 234,567&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;1,234.567&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Рубли&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;1 234,56 ₽&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;₽1,234.56&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Доллары&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;1 234,56 $&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;$1,234.56&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;blockquote&gt;
&lt;p&gt;В локали &lt;code&gt;en-US&lt;&#x2F;code&gt; у абсолютного большинства валют символ валюты ставится перед числом.
Таблица выше показывает общий случай. В других локалях или при наличии определенных требований, таких как национальный стандарт, позиция символа относительно числа может быть иной.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;data&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#data&quot; aria-label=&quot;Anchor link for: data&quot;&gt;Дата&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Категория&lt;&#x2F;th&gt;&lt;th&gt;&lt;code&gt;ru-RU&lt;&#x2F;code&gt;&lt;&#x2F;th&gt;&lt;th&gt;&lt;code&gt;en-US&lt;&#x2F;code&gt;&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Дата&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;06.07.2024&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;7&#x2F;6&#x2F;2024&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Дата и время&lt;&#x2F;strong&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;06.07.2024, 14:30:00&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;7&#x2F;6&#x2F;2024, 2:30:00 PM&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Дата&lt;&#x2F;strong&gt;&lt;br&#x2F;&gt;(строковый формат)&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;6 июля 2024 г.&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;code&gt;July 6, 2024&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;В &lt;code&gt;en-US&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Нули в начале числового кода дня и месяца пропускаются.&lt;&#x2F;li&gt;
&lt;li&gt;Обязателен пробел между числом и &lt;code&gt;AM&#x2F;PM&lt;&#x2F;code&gt;. &lt;code&gt;2:30 PM&lt;&#x2F;code&gt; — правильно, &lt;code&gt;2:30PM&lt;&#x2F;code&gt; — неправильно.&lt;&#x2F;li&gt;
&lt;li&gt;Для большей точности в локализованных строках можно добавлять обозначения PDT (Pacific Daylight Time) и PST (Pacific Standard Time), являющиеся аналогами летнего и зимнего времени. PDT это часовой пояс UTC−7, PST — UTC-8. Мне никогда не приходилось применять их, но об их существовании полезно знать.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;rabota-s-datami-universal-nyi-format-dlia-khraneniia-i-peredachi&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#rabota-s-datami-universal-nyi-format-dlia-khraneniia-i-peredachi&quot; aria-label=&quot;Anchor link for: rabota-s-datami-universal-nyi-format-dlia-khraneniia-i-peredachi&quot;&gt;Работа с датами: универсальный формат для хранения и передачи&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Для работы с API и в других случаях, когда нужно обеспечить машиночитаемость, не должны использоваться локализованные строки из примеров выше. Вместо них рекомендуется использовать даты, соответствующие &lt;a href=&quot;https:&#x2F;&#x2F;www.iso.org&#x2F;iso-8601-date-and-time-format.html&quot;&gt;ISO 8601&lt;&#x2F;a&gt; в UTC:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#f29718;&quot;&gt;2024-07-06T14:30:00Z
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Расшифровка:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Часть&lt;&#x2F;th&gt;&lt;th&gt;Значение&lt;&#x2F;th&gt;&lt;th&gt;Пояснение&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;2024&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Год&lt;&#x2F;td&gt;&lt;td&gt;Четырёхзначный год&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;07&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Месяц&lt;&#x2F;td&gt;&lt;td&gt;Июль (всегда двузначный: 01–12)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;06&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;День&lt;&#x2F;td&gt;&lt;td&gt;6-е число месяца (01–31)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;-&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Разделитель&lt;&#x2F;td&gt;&lt;td&gt;Статический разделитель года, месяца и дня&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;T&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Маркер времени&lt;&#x2F;td&gt;&lt;td&gt;Обозначает начало временной части (от &lt;em&gt;Time&lt;&#x2F;em&gt;)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;14&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Часы&lt;&#x2F;td&gt;&lt;td&gt;14 часов в 24-часовом формате (2:30 PM)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;30&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Минуты&lt;&#x2F;td&gt;&lt;td&gt;30 минут&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;00&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Секунды&lt;&#x2F;td&gt;&lt;td&gt;00 секунд&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;code&gt;Z&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Временная зона&lt;&#x2F;td&gt;&lt;td&gt;Обозначает &lt;strong&gt;UTC&lt;&#x2F;strong&gt; (&lt;em&gt;Zero offset&lt;&#x2F;em&gt;, нулевое смещение)&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;Последняя буква &lt;code&gt;Z&lt;&#x2F;code&gt;, обозначающая временную зону, применяется для указания времени по Гринвичу, то есть в часовом поясе UTC+0. В других временных зонах нужно явно указывать смещение в часах и минутах в форматах &lt;code&gt;+HH:MM&lt;&#x2F;code&gt; или &lt;code&gt;-HH:MM&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Примеры:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2024-07-06T14:30:00Z&lt;&#x2F;code&gt; — UTC+0 (Гринвич);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;2024-07-06T17:30:00+03:00&lt;&#x2F;code&gt; — то же самое время, но в часовом поясе Москвы (UTC+3);&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;2024-07-06T07:30:00-07:00&lt;&#x2F;code&gt; — то же самое время, но в часовом поясе Нью-Йорка, Лос-Анжелеса или Торонто (UTC-7).&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;script&gt;
    function validateInput(value, type) {
        const errorElement = document.getElementById(&#x27;errorMessage&#x27;);
        const inputElement = document.getElementById(&#x27;inputField&#x27;);
        errorElement.textContent = &#x27;&#x27;;
        inputElement.classList.remove(&#x27;input-error&#x27;);
        if (!value.trim()) {
            return false;
        }
        if (type === &#x27;number&#x27; || type === &#x27;currency&#x27;) {
            if (value.includes(&#x27;-&#x27;)) {
                errorElement.textContent = &#x27;Отрицательные числа не допускаются&#x27;;
                inputElement.classList.add(&#x27;input-error&#x27;);
                return false;
            }
            const numberPattern = &#x2F;^[\d\s.,]+$&#x2F;;
            if (!numberPattern.test(value)) {
                errorElement.textContent = &#x27;Некорректный формат числа&#x27;;
                inputElement.classList.add(&#x27;input-error&#x27;);
                return false;
            }
            return true;
        }
        if (type === &#x27;date&#x27;) {
            &#x2F;&#x2F; Проверяем оба формата дат
            const ruDatePattern = &#x2F;^\d{1,2}\.\d{1,2}\.\d{4}$&#x2F;;
            const enDatePattern = &#x2F;^\d{1,2}\&#x2F;\d{1,2}\&#x2F;\d{4}$&#x2F;;
            if (!ruDatePattern.test(value) &amp;&amp; !enDatePattern.test(value)) {
                errorElement.textContent = &#x27;Неверный формат даты. Используйте dd.mm.yyyy или mm&#x2F;dd&#x2F;yyyy&#x27;;
                inputElement.classList.add(&#x27;input-error&#x27;);
                return false;
            }
            return true;
        }
        return false;
    }
    function parseNumber(value) {
        return parseFloat(value.replace(&#x2F;\s&#x2F;g,&#x27;&#x27;).replace(&#x27;,&#x27;, &#x27;.&#x27;));
    }
    function formatNumber(number, locale) {
        if (locale === &#x27;ru&#x27;) {
            return number.toLocaleString(&#x27;ru-RU&#x27;);
        } else {
            return number.toLocaleString(&#x27;en-US&#x27;);
        }
    }
    function formatCurrency(number, locale) {
        if (locale === &#x27;ru&#x27;) {
            return number.toLocaleString(&#x27;ru-RU&#x27;, {
                style: &#x27;currency&#x27;,
                currency: &#x27;RUB&#x27;
            });
        } else {
            return number.toLocaleString(&#x27;en-US&#x27;, {
                style: &#x27;currency&#x27;,
                currency: &#x27;USD&#x27;
            });
        }
    }
    function parseDate(dateString) {
        &#x2F;&#x2F; Определяем формат и парсим дату
        if (dateString.includes(&#x27;.&#x27;)) {
            &#x2F;&#x2F; Формат dd.mm.yyyy (русский)
            const parts = dateString.split(&#x27;.&#x27;);
            return new Date(parts[2], parts[1] - 1, parts[0]);
        } else if (dateString.includes(&#x27;&#x2F;&#x27;)) {
            &#x2F;&#x2F; Формат mm&#x2F;dd&#x2F;yyyy (английский)
            const parts = dateString.split(&#x27;&#x2F;&#x27;);
            return new Date(parts[2], parts[0] - 1, parts[1]);
        }
        return null;
    }
    function formatDate(dateString, outputLocale) {
        const date = parseDate(dateString);
        if (!date || isNaN(date.getTime())) {
            throw new Error(&#x27;Некорректная дата&#x27;);
        }
        if (outputLocale === &#x27;ru&#x27;) {
            return date.toLocaleDateString(&#x27;ru-RU&#x27;);
        } else {
            return date.toLocaleDateString(&#x27;en-US&#x27;);
        }
    }
    function formatValue() {
        const inputValue = document.getElementById(&#x27;inputField&#x27;).value;
        const type = document.getElementById(&#x27;typeSelector&#x27;).value;
        const locale = document.getElementById(&#x27;localeSelector&#x27;).value;
        const outputField = document.getElementById(&#x27;outputField&#x27;);
        if (!validateInput(inputValue, type)) {
            outputField.value = &#x27;&#x27;;
            return;
        }
        try {
            let formattedValue = &#x27;&#x27;;
            if (type === &#x27;number&#x27;) {
                const number = parseNumber(inputValue);
                if (isNaN(number)) {
                    throw new Error(&#x27;Некорректное число&#x27;);
                }
                formattedValue = formatNumber(number, locale);
            } else if (type === &#x27;currency&#x27;) {
                const number = parseNumber(inputValue);
                if (isNaN(number)) {
                    throw new Error(&#x27;Некорректное число&#x27;);
                }
                formattedValue = formatCurrency(number, locale);
            } else if (type === &#x27;date&#x27;) {
                formattedValue = formatDate(inputValue, locale);
            }  
            outputField.value = formattedValue;
        } catch (error) {
            document.getElementById(&#x27;errorMessage&#x27;).textContent = error.message || &#x27;Ошибка форматирования&#x27;;
            document.getElementById(&#x27;inputField&#x27;).classList.add(&#x27;input-error&#x27;);
            outputField.value = &#x27;&#x27;;
        }
    }
    document.getElementById(&#x27;typeSelector&#x27;).addEventListener(&#x27;change&#x27;, function() {
        document.getElementById(&#x27;errorMessage&#x27;).textContent = &#x27;&#x27;;
        document.getElementById(&#x27;inputField&#x27;).classList.remove(&#x27;input-error&#x27;);
        document.getElementById(&#x27;outputField&#x27;).value = &#x27;&#x27;;
    });
    document.getElementById(&#x27;localeSelector&#x27;).addEventListener(&#x27;change&#x27;, function() {
        document.getElementById(&#x27;errorMessage&#x27;).textContent = &#x27;&#x27;;
        document.getElementById(&#x27;inputField&#x27;).classList.remove(&#x27;input-error&#x27;);
        document.getElementById(&#x27;outputField&#x27;).value = &#x27;&#x27;;
    });
&lt;&#x2F;script&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>GitHub Action для запуска CSpell в CI</title>
        <published>2025-05-14T00:00:00+00:00</published>
        <updated>2025-05-14T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Александр Яковлев
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://alexjameson.github.io/articles/cspell-github-action/"/>
        <id>https://alexjameson.github.io/articles/cspell-github-action/</id>
        
        <content type="html" xml:base="https://alexjameson.github.io/articles/cspell-github-action/">&lt;p&gt;Некоторое время назад я написал статью о том, как использовать &lt;a href=&quot;https:&#x2F;&#x2F;habr.com&#x2F;ru&#x2F;articles&#x2F;902236&#x2F;&quot;&gt;CSpell для проверки орфографии&lt;&#x2F;a&gt;. В ней я упомянул, что можно создать GitHub Action для запуска CSpell в рамках CI-пайплайна. В тот момент у меня было только примерное понимание того, как такой Action должен работать, а в продакшене финальный вариант писали уже наши программисты с нуля.&lt;&#x2F;p&gt;
&lt;p&gt;Я решил доделать Action самостоятельно, чтобы дать любому пользователю возможность запускать &lt;a href=&quot;https:&#x2F;&#x2F;cspell.org&#x2F;&quot;&gt;CSpell&lt;&#x2F;a&gt; в том числе в пул-реквестах на GitHub.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;trebovaniia-i-ogranicheniia&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#trebovaniia-i-ogranicheniia&quot; aria-label=&quot;Anchor link for: trebovaniia-i-ogranicheniia&quot;&gt;Требования и ограничения&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Основным требованием для этого процесса была возможность запуска CSpell с использованием того же конфигурационного файла и тех же словарей, которые могут использоваться локально.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;CSpell должен запускаться по команде в комментарии, оставленном в пул-реквесте.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Проверяться должны те файлы, которые были изменены в пул-реквесте.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Последний пункт несет в себе ограничение, связанное со спецификой работы CSpell. Этот инструмент умеет проверять только файлы целиком, а не отдельные строки. Таким образом, при конфигурации нужно сделать выбор: либо проверять все файлы, в которых есть измененные строки, либо же собрать все измененные в коммитах строки в один временный файл, и проверить уже его. Я сделал выбор в пользу проверки реально существующих файлов, даже с учетом того, что в результатах проверки могут быть ошибки, которые появились не в рамках текущего пул-реквеста. Также у выбранного мной способа есть дополнительное преимущество — при проверке таких файлов будет указана строка, на которой есть слово, содержащее ошибку.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;realizatsiia&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#realizatsiia&quot; aria-label=&quot;Anchor link for: realizatsiia&quot;&gt;Реализация&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Главный вызов в создании Action такого рода заключается в правильном вычислении дельты (diff) между HEAD текущей ветки и HEAD ветки, в которую должен быть вмержен пул-реквест (base branch). На маркетплейсе GitHub есть Actions, которые должны позволять это делать, но ни один из них не сработал в моих условиях, так что я взял за основу код, предложенный Claude Sonnet 3.7, и доработал его под свою задачу.&lt;&#x2F;p&gt;
&lt;p&gt;В моей реализации Action работает следующим образом:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;В первых четырех шагах (начиная с &lt;code&gt;Checkout repository&lt;&#x2F;code&gt; до &lt;code&gt;Install Russian dictionary&lt;&#x2F;code&gt;) в коде ниже происходит подготовка репозитория и установка всех необходимых пакетов в раннере.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;На шаге &lt;code&gt;Fetch PR details&lt;&#x2F;code&gt; вычисляется дельта между HEAD текущей ветки и HEAD ветки, в которую должен быть вмержен пул-реквест.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;В следующих шагах — &lt;code&gt;Checkout PR&lt;&#x2F;code&gt; и &lt;code&gt;Get changed files&lt;&#x2F;code&gt; — подготавливаются файлы, попадающие в вычисленную дельту.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Шаг &lt;code&gt;Run CSpell check&lt;&#x2F;code&gt; отвечает непосредственно за запуск проверки орфографии в этих файлах. Также на этом шаге подготавливается контент комментария, который будет отправлен в пул-реквест по окончанию проверки. В этом комментарии будет один из трех возможных результатов:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Обнаружены ошибки. В таком случае в комментарии будут отправлены ошибки, которые были найдены в процессе проверки.&lt;&#x2F;li&gt;
&lt;li&gt;Проверка прошла успешно. В таком случае в комментарии будет отправлен текст &lt;code&gt;✅ Spelling check passed for all changed files&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Не обнаружены файлы, подлежащие проверке. В таком случае в комментарии будет отправлен текст &lt;code&gt;✅ No files changed to check.&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;В данном случае не предусмотрена обработка ошибок, возникающих в ходе запуска Action. Такие ошибки могут быть связаны с неверной конфигурацией, исчерпанием лимита бесплатного времени работы (2000 минут в месяц) и пр.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Последний шаг — &lt;code&gt;Comment PR&lt;&#x2F;code&gt; — отправляет комментарий с результатами в пул-реквест.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;Пример проверки:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;assets&#x2F;cspell-action-result.png&quot; alt=&quot;cspell check result&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Получившийся файл расположен по адресу &lt;code&gt;.github&#x2F;workflows&#x2F;cspell-check.yml&lt;&#x2F;code&gt; и выглядит следующим образом:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;CSpell Check
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;issue_comment&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;types&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;created&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;permissions&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;contents&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;read
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;pull-requests&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;write
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;issues&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;write
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;jobs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;cspell-check&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;github.event.issue.pull_request &amp;amp;&amp;amp; contains(github.event.comment.body, &amp;#39;&#x2F;check&amp;#39;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;runs-on&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;ubuntu-latest
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;steps&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Checkout repository
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;uses&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;actions&#x2F;checkout@v3
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;fetch-depth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Set up Node.js
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;uses&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;actions&#x2F;setup-node@v3
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;node-version&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;#39;20&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Install cspell
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;npm install -g cspell
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Install Russian dictionary
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;npm install -g @cspell&#x2F;dict-ru_ru
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Fetch PR details
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;pr-details
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          PR_NUMBER=${{ github.event.issue.number }}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          PR_DATA=$(curl -s -H &amp;quot;Authorization: token ${{ secrets.GITHUB_TOKEN }}&amp;quot; \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            &amp;quot;https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;${{ github.repository }}&#x2F;pulls&#x2F;$PR_NUMBER&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          BASE_REF=$(echo &amp;quot;$PR_DATA&amp;quot; | jq -r .base.ref)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          HEAD_REF=$(echo &amp;quot;$PR_DATA&amp;quot; | jq -r .head.ref)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          HEAD_SHA=$(echo &amp;quot;$PR_DATA&amp;quot; | jq -r .head.sha)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;base_ref=$BASE_REF&amp;quot; &amp;gt;&amp;gt; $GITHUB_OUTPUT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;head_ref=$HEAD_REF&amp;quot; &amp;gt;&amp;gt; $GITHUB_OUTPUT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;head_sha=$HEAD_SHA&amp;quot; &amp;gt;&amp;gt; $GITHUB_OUTPUT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Checkout PR
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          git fetch origin pull&#x2F;${{ github.event.issue.number }}&#x2F;head:pr-${{ github.event.issue.number }}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          git checkout pr-${{ github.event.issue.number }}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Get changed files
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;changed-files
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          BASE_REF=${{ steps.pr-details.outputs.base_ref }}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          git fetch origin $BASE_REF
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          CHANGED_FILES=$(git diff --name-only origin&#x2F;$BASE_REF)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;Changed files:&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;$CHANGED_FILES&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;files&amp;lt;&amp;lt;EOF&amp;quot; &amp;gt;&amp;gt; $GITHUB_OUTPUT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;$CHANGED_FILES&amp;quot; &amp;gt;&amp;gt; $GITHUB_OUTPUT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;EOF&amp;quot; &amp;gt;&amp;gt; $GITHUB_OUTPUT
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Run CSpell check
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;cspell-check
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          # Get the changed files
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          CHANGED_FILES=&amp;quot;${{ steps.changed-files.outputs.files }}&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          if [ -z &amp;quot;$CHANGED_FILES&amp;quot; ]; then
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            echo &amp;quot;## CSpell Check Result&amp;quot; &amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            echo &amp;quot;&amp;quot; &amp;gt;&amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            echo &amp;quot;✅ No files changed to check.&amp;quot; &amp;gt;&amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            exit 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          fi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          # Create a file with the list of files to check
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;$CHANGED_FILES&amp;quot; &amp;gt; files_to_check.txt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          # Run cspell check
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          cspell --no-progress $(cat files_to_check.txt) &amp;gt; cspell_output.txt 2&amp;gt;&amp;amp;1 || {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            # If cspell fails (returns non-zero), it found spelling issues
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            echo &amp;quot;## CSpell Check Result&amp;quot; &amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            echo &amp;quot;&amp;quot; &amp;gt;&amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            echo &amp;quot;❌ Spelling issues found:&amp;quot; &amp;gt;&amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            echo &amp;quot;&amp;quot; &amp;gt;&amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            # Format the output with newlines after each issue
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            grep &amp;quot; - Unknown word&amp;quot; cspell_output.txt &amp;gt; formatted_issues.txt || true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            cat formatted_issues.txt &amp;gt;&amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            echo &amp;quot;&amp;quot; &amp;gt;&amp;gt; comment.md # Add an extra newline
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            grep &amp;quot;CSpell: Files checked:&amp;quot; cspell_output.txt &amp;gt;&amp;gt; comment.md || true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            exit 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          # If we get here, cspell succeeded (returned zero), no spelling issues
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;## CSpell Check Result&amp;quot; &amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;&amp;quot; &amp;gt;&amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;✅ Spelling check passed for all changed files.&amp;quot; &amp;gt;&amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;&amp;quot; &amp;gt;&amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          echo &amp;quot;[View Action](https:&#x2F;&#x2F;github.com&#x2F;${{ github.repository }}&#x2F;actions&#x2F;runs&#x2F;${{ github.run_id }})&amp;quot; &amp;gt;&amp;gt; comment.md
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;Post comment
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;always()
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#399ee6;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa6e32;&quot;&gt;|
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          PR_NUMBER=${{ github.event.issue.number }}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          COMMENT_BODY=$(cat comment.md)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          COMMENT_JSON=$(jq -n --arg body &amp;quot;$COMMENT_BODY&amp;quot; &amp;#39;{&amp;quot;body&amp;quot;: $body}&amp;#39;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;          curl -s -X POST \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            -H &amp;quot;Authorization: token ${{ secrets.GITHUB_TOKEN }}&amp;quot; \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            -H &amp;quot;Content-Type: application&#x2F;json&amp;quot; \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            -d &amp;quot;$COMMENT_JSON&amp;quot; \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;            &amp;quot;https:&#x2F;&#x2F;api.github.com&#x2F;repos&#x2F;${{ github.repository }}&#x2F;issues&#x2F;$PR_NUMBER&#x2F;comments&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;konfiguratsiia-cspell&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#konfiguratsiia-cspell&quot; aria-label=&quot;Anchor link for: konfiguratsiia-cspell&quot;&gt;Конфигурация CSpell&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Моя собственная конфигурация CSpell с используемыми словарями подробно описана в &lt;a href=&quot;https:&#x2F;&#x2F;habr.com&#x2F;ru&#x2F;articles&#x2F;902236&#x2F;&quot;&gt;статье&lt;&#x2F;a&gt;, на которую я уже ссылался. Здесь я покажу только конфигурационный файл для тестового проекта:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#fafafa;color:#61676c;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;version&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;0.2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;language&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;en,ru&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;import&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;@cspell&#x2F;dict-ru_ru&#x2F;cspell-ext.json&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dictionaryDefinitions&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;	  {
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;allowed-en&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;path&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dicts&#x2F;allowed-en.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;addWords&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;	  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,	  
&lt;&#x2F;span&gt;&lt;span&gt;	  {
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;allowed-adj&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;path&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dicts&#x2F;allowed-adj.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;addWords&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;	  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	  {
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;allowed-nouns&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;path&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dicts&#x2F;allowed-nouns.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;addWords&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;	  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	  {
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;allowed-verbs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;path&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dicts&#x2F;allowed-verbs.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;addWords&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;	  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	  {
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;names&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;path&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dicts&#x2F;names.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;addWords&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;	  }&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	  {
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;name&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forbidden-ru&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;path&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dicts&#x2F;forbidden-ru.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;addWords&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ff8f40;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;	  }
&lt;&#x2F;span&gt;&lt;span&gt;   ]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dictionaries&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;allowed-en&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;allowed-adj&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;allowed-nouns&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;allowed-verbs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;names&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;forbidden-ru&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;   ]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ignoreRegExpList&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;		 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;```[^]*```&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;	]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;ignorePaths&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;[
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;node_modules&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;dicts&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61676ccc;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;		  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#86b300;&quot;&gt;&amp;quot;.github&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    ]
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Сравнение генераторов статических сайтов для создания документации</title>
        <published>2024-11-14T00:00:00+00:00</published>
        <updated>2024-11-14T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Александр Яковлев
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://alexjameson.github.io/articles/ssg-comparison/"/>
        <id>https://alexjameson.github.io/articles/ssg-comparison/</id>
        
        <content type="html" xml:base="https://alexjameson.github.io/articles/ssg-comparison/">&lt;p&gt;Цель сравнения — помочь людям, которые не слишком хорошо себе знакомы с различными генераторами статических сайтов, составить базовое представление о нескольких распространенных решениях. Обзор не претендует на объективность и показывает в первую очередь мой опыт.&lt;&#x2F;p&gt;
&lt;p&gt;Я сравнил генераторы по нескольким параметрам, которые кажутся мне достаточно важными и при этом доступными для анализа, но получившиеся результаты довольно субъективны. Причина в том, что я сам работаю в Яндексе и последние 4 года я пишу документацию с помощью Diplodoc. Это ведет к тому, что у меня самый актуальный и глубокий опыт именно с этим инструментом, а еще он мне просто нравится.&lt;&#x2F;p&gt;
&lt;p&gt;Результаты могут очень сильно различаться в зависимости от сценариев использования, для простоты я предполагаю, что мы сравниваем генераторы для небольшого документационного проекта объемом в пару десятков уже имеющихся Markdown-файлов. В этом обзоре не затронуты инструменты для AsciiDoc и других языков (за исключением Sphinx) так как у меня нет практического опыта работы с ними. Также я не рассмотрел самый популярный на GitHub генератор статических сайтов на основе Markdown под названием Gatsby, так как он давно стал фактически фреймворком для создания веб-приложений, а также потому, что я не следил за его развитием в последние годы и не ориентируюсь в существующих пяти версиях.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bazovoe-sravnenie&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#bazovoe-sravnenie&quot; aria-label=&quot;Anchor link for: bazovoe-sravnenie&quot;&gt;Базовое сравнение&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Можно выбрать любой из этих генераторов, все они обладают возможностями, которые позволяют делать удобные и кастомизируемые сайты. Везде сейчас есть поддержка диаграмм как кода, переиспользование контента, возможность встраивать генерацию по стандарту OpenAPI и многое другое.&lt;&#x2F;p&gt;
&lt;p&gt;Основные различия заключаются в наличии некоторых дополнительных возможностей, сложности конфигурации и эксплуатации.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tl-dr&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#tl-dr&quot; aria-label=&quot;Anchor link for: tl-dr&quot;&gt;Tl;dr&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Docusaurus&lt;&#x2F;code&gt; отлично подходит для любых проектов, позволяет добавить интерактивность и кастомизировать что угодно при знании React.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;MkDocs&lt;&#x2F;code&gt; идеален для быстрого старта и простых проектов, широко распространен в индустрии.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Diplodoc&lt;&#x2F;code&gt; подходит для крупных и средних проектов, активно развивается. Единственный генератор в списке с изначально русскоязычным сообществом.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Sphinx&lt;&#x2F;code&gt; это сложный инструмент. Нужно быть готовым разбираться во множестве вещей, зато можно сделать практически что угодно.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Hugo&lt;&#x2F;code&gt; выделяется скоростью и производительностью, подойдет для самых разных проектов — от блогов до больших порталов.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Jekyll&lt;&#x2F;code&gt; остаётся неплохим выбором для практически любых проектов из-за долгой истории, множества плагинов и простоты использования, но постепенно теряет популярность.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;sravnenie-kharakteristik&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#sravnenie-kharakteristik&quot; aria-label=&quot;Anchor link for: sravnenie-kharakteristik&quot;&gt;Сравнение характеристик&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Критерий&lt;&#x2F;th&gt;&lt;th&gt;Docusaurus&lt;&#x2F;th&gt;&lt;th&gt;MkDocs&lt;&#x2F;th&gt;&lt;th&gt;Diplodoc&lt;&#x2F;th&gt;&lt;th&gt;Sphinx&lt;&#x2F;th&gt;&lt;th&gt;Hugo&lt;&#x2F;th&gt;&lt;th&gt;Jekyll&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Скорость&lt;&#x2F;td&gt;&lt;td&gt;Быстро&lt;&#x2F;td&gt;&lt;td&gt;Очень быстро&lt;&#x2F;td&gt;&lt;td&gt;Средне&lt;&#x2F;td&gt;&lt;td&gt;Долго&lt;&#x2F;td&gt;&lt;td&gt;Средне&lt;&#x2F;td&gt;&lt;td&gt;Быстро&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Сложность использования&lt;&#x2F;td&gt;&lt;td&gt;Средняя&lt;&#x2F;td&gt;&lt;td&gt;Низкая&lt;&#x2F;td&gt;&lt;td&gt;Средняя&lt;&#x2F;td&gt;&lt;td&gt;Высокая&lt;&#x2F;td&gt;&lt;td&gt;Средняя&lt;&#x2F;td&gt;&lt;td&gt;Низкая&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Документация и сообщество&lt;&#x2F;td&gt;&lt;td&gt;Отлично&lt;&#x2F;td&gt;&lt;td&gt;Отлично&lt;&#x2F;td&gt;&lt;td&gt;Средне&lt;&#x2F;td&gt;&lt;td&gt;Отлично&lt;&#x2F;td&gt;&lt;td&gt;Хорошо&lt;&#x2F;td&gt;&lt;td&gt;Отлично&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Экосистема&lt;&#x2F;td&gt;&lt;td&gt;Много плагинов, MDX&lt;&#x2F;td&gt;&lt;td&gt;Material theme, макросы&lt;&#x2F;td&gt;&lt;td&gt;Плагины, совместимые с &lt;code&gt;markdown-it&lt;&#x2F;code&gt;&lt;&#x2F;td&gt;&lt;td&gt;Есть все&lt;&#x2F;td&gt;&lt;td&gt;Обширная стандартная библиотека, плагины&lt;&#x2F;td&gt;&lt;td&gt;Плагины&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Генерация OpenAPI&lt;&#x2F;td&gt;&lt;td&gt;Встроенная поддержка, плагины&lt;&#x2F;td&gt;&lt;td&gt;Плагины&lt;&#x2F;td&gt;&lt;td&gt;Встроенная поддержка, без кастомизации&lt;&#x2F;td&gt;&lt;td&gt;Больше всего вариантов&lt;&#x2F;td&gt;&lt;td&gt;Плагины, стандартные средства&lt;&#x2F;td&gt;&lt;td&gt;Плагины, стандартные средства&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;podrobnyi-razbor&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#podrobnyi-razbor&quot; aria-label=&quot;Anchor link for: podrobnyi-razbor&quot;&gt;Подробный разбор&lt;&#x2F;a&gt;&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;docusaurus&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#docusaurus&quot; aria-label=&quot;Anchor link for: docusaurus&quot;&gt;Docusaurus&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Разработчик и дата выпуска: Meta (Facebook), 2017 год | &lt;a href=&quot;https:&#x2F;&#x2F;docusaurus.io&#x2F;&quot;&gt;Сайт&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Язык: JavaScript&lt;&#x2F;li&gt;
&lt;li&gt;Сложность использования: Средняя. Для базового использования достаточно знания Markdown, для кастомизации нужны знания React.&lt;&#x2F;li&gt;
&lt;li&gt;Документация и сообщество: Отличная документация, большое активное сообщество, множество примеров.&lt;&#x2F;li&gt;
&lt;li&gt;Локализация и версионирование: Встроенная поддержка.&lt;&#x2F;li&gt;
&lt;li&gt;Экосистема: Богатая. Поддержка MDX, множество плагинов, темы.&lt;&#x2F;li&gt;
&lt;li&gt;Переиспользование контента: MDX компоненты.&lt;&#x2F;li&gt;
&lt;li&gt;OpenAPI: Интеграция с Redocly, Redoc, поддержка Swagger UI, Docusaurus OpenAPI Plugin.&lt;&#x2F;li&gt;
&lt;li&gt;Поиск: Встроенный локальный поиск + интеграция с Algolia DocSearch.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;clickhouse.com&#x2F;docs&quot;&gt;Пример сайта: ClickHouse&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Мое мнение&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;Прекрасный инструмент, который сочетает в себе простоту и в то же время возможности для создания прекрасных сайтов. Есть возможность быстро начать использовать, добавив все необходимое для комфортного использования документации просто прописав несколько строк в конфигурационном файле — работающий поиск, простая локализация, версионирование, понятные плагины и многое другое.&lt;&#x2F;p&gt;
&lt;p&gt;Важнейшая часть для кастомизации — &lt;a href=&quot;https:&#x2F;&#x2F;mdxjs.com&#x2F;&quot;&gt;MDX&lt;&#x2F;a&gt;. Это формат, который позволяет совмещать Markdown и JSX в одном файле и таким образом создавать любые сочетания текста и интерактивных элементов, в том числе используя переменные, условный рендеринг и возможности компонентного подхода.&lt;&#x2F;p&gt;
&lt;p&gt;Этот инструмент также хорошо подходит для создания целых сайтов, в которых документация — только один из разделов, и в таком случае получится сохранить единый стиль для всех частей продукта, причем этот стиль будет проработан фронтендерами с помощью привычных подходов.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;mkdocs&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#mkdocs&quot; aria-label=&quot;Anchor link for: mkdocs&quot;&gt;MkDocs&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Разработчик и дата выпуска: Tom Christie, 2014 год | &lt;a href=&quot;https:&#x2F;&#x2F;www.mkdocs.org&#x2F;&quot;&gt;Сайт&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Язык: Python&lt;&#x2F;li&gt;
&lt;li&gt;Сложность использования: Низкая. Чистый Markdown с возможностью расширения через плагины, простая конфигурация в YAML.&lt;&#x2F;li&gt;
&lt;li&gt;Документация и сообщество: Хорошая документация, активное сообщество.&lt;&#x2F;li&gt;
&lt;li&gt;Локализация и версионирование: Через плагины.&lt;&#x2F;li&gt;
&lt;li&gt;Экосистема: Material theme значительно расширяет функциональность инструмента, множество плагинов.&lt;&#x2F;li&gt;
&lt;li&gt;Переиспользование контента: Макросы.&lt;&#x2F;li&gt;
&lt;li&gt;OpenAPI: Через плагины (swagger-ui).&lt;&#x2F;li&gt;
&lt;li&gt;Поиск: Встроенный поиск в Material theme.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;help.camera.rt.ru&#x2F;&quot;&gt;Пример сайта: Видеонаблюдение Ростелеком&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Мое мнение&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;Говорим MkDocs — чаще всего подразумеваем тему или фреймворк &lt;a href=&quot;https:&#x2F;&#x2F;docs.readthedocs.io&#x2F;en&#x2F;stable&#x2F;intro&#x2F;mkdocs.html&quot;&gt;Material for MkDocs&lt;&#x2F;a&gt;, я уже давно не видел проектов только на MkDocs без Material. В своей основе MkDocs это предельно простой генератор, я бы даже рискнул назвать его примитивным. А Material for MkDocs расширяет его функциональность, добавляя умный поиск, продвинутое форматирование, разные визуальные элементы вроде вкладок и аннотаций, поддержку диаграмм как кода и так далее.&lt;&#x2F;p&gt;
&lt;p&gt;Я использовал его для прототипирования сайта с документацией для одного из проектов по работе, и мне понадобилось меньше получаса чтобы показать уже собранный и готовый к выкладке сайт с несколькими страницами документации. Это быстро, понятно и довольно удобно, но в то же время не все готовы мириться с тем, как выглядит готовый сайт, и что кастомизировать его будет непросто.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;diplodoc&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#diplodoc&quot; aria-label=&quot;Anchor link for: diplodoc&quot;&gt;Diplodoc&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Разработчик и дата выпуска: Яндекс, 2022 год | &lt;a href=&quot;https:&#x2F;&#x2F;diplodoc.com&#x2F;ru&quot;&gt;Сайт&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Язык: JavaScript&lt;&#x2F;li&gt;
&lt;li&gt;Время развертывания: 30-45 минут.&lt;&#x2F;li&gt;
&lt;li&gt;Сложность использования: Средняя. Своя система шаблонов и форматирования.&lt;&#x2F;li&gt;
&lt;li&gt;Документация и сообщество: Базовая документация, небольшое русскоязычное сообщество.&lt;&#x2F;li&gt;
&lt;li&gt;Поддержка диаграмм: Встроенная поддержка (Mermaid).&lt;&#x2F;li&gt;
&lt;li&gt;Локализация и версионирование: Нужно описывать конфигурацию самостоятельно, но поддержка в планах.&lt;&#x2F;li&gt;
&lt;li&gt;Экосистема: Любые плагины, совместимые с парсером &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;markdown-it&#x2F;markdown-it&quot;&gt;markdown-it&lt;&#x2F;a&gt;. Самому с этим справиться непросто.&lt;&#x2F;li&gt;
&lt;li&gt;Переиспользование контента: Встроенный механизм на нескольких уровнях, от блоков до целых страниц.&lt;&#x2F;li&gt;
&lt;li&gt;OpenAPI: Встроенная поддержка, включая плейграунд.&lt;&#x2F;li&gt;
&lt;li&gt;Поиск: Интеграция с Lunr.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;ydb.tech&#x2F;docs&#x2F;ru&#x2F;&quot;&gt;Пример сайта: YDB Docs&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Мое мнение&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;Это хороший инструмент, который сделан в первую очередь для средних и крупных проектов. В основе работы с Markdown - свой диалект (YFM), который даёт больше возможностей, чем практически у всех остальных инструментов в этом списке.&lt;&#x2F;p&gt;
&lt;p&gt;Помимо обычных статических страниц, можно декларативно описывать кастомные страницы (например разводящие страницы) с помощью &lt;a href=&quot;https:&#x2F;&#x2F;diplodoc.com&#x2F;docs&#x2F;ru&#x2F;project&#x2F;page-constructor&quot;&gt;Page Constructor&lt;&#x2F;a&gt;. Технический писатель может делать это самостоятельно, и эти страницы будут выглядеть действительно хорошо, как в &lt;a href=&quot;https:&#x2F;&#x2F;diplodoc.com&#x2F;docs&#x2F;ru&#x2F;project&#x2F;pc-example1&quot;&gt;этом примере&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Для крупных проектов у этого инструмента есть некоторые особые возможности, например пресеты переменных, которые позволяют легко генерировать из одной текстовой базы несколько разных версий документации, а также хорошая производительность, которая позволяет собирать сайты из репозиториев объемом даже в пару гигабайт, знаю по своему опыту.&lt;&#x2F;p&gt;
&lt;p&gt;Diplodoc — это определенно не самый просто инструмент для самостоятельной настройки. Я знаю технических писателей, которые успешно с этим справляются и даже создают полноценные пайплайны для CI&#x2F;CD, но не все могут это сделать.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;sphinx&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#sphinx&quot; aria-label=&quot;Anchor link for: sphinx&quot;&gt;Sphinx&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Разработчик и дата выпуска: Georg Brandl для Python Software Foundation, 2008 год | &lt;a href=&quot;https:&#x2F;&#x2F;www.sphinx-doc.org&#x2F;en&#x2F;master&#x2F;index.html#&quot;&gt;Сайт&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Язык: Python&lt;&#x2F;li&gt;
&lt;li&gt;Сложность использования: Высокая. Использует reStructuredText (хотя поддерживает и Markdown), сложная конфигурация.&lt;&#x2F;li&gt;
&lt;li&gt;Документация и сообщество: Обширная документация, большое устоявшееся сообщество.&lt;&#x2F;li&gt;
&lt;li&gt;Локализация и версионирование: Встроенная поддержка обеих функций, продвинутые инструменты для перевода.&lt;&#x2F;li&gt;
&lt;li&gt;Экосистема: Богатейшая экосистема расширений.&lt;&#x2F;li&gt;
&lt;li&gt;Переиспользование контента: Продвинутая система директив.&lt;&#x2F;li&gt;
&lt;li&gt;OpenAPI: Через расширения, множество способов.&lt;&#x2F;li&gt;
&lt;li&gt;Поиск: Встроенный поиск, возможность интеграции с внешними системами.&lt;&#x2F;li&gt;
&lt;li&gt;Дополнительные преимущества:
&lt;ul&gt;
&lt;li&gt;Превосходная поддержка LaTeX и PDF&lt;&#x2F;li&gt;
&lt;li&gt;Автоматическая генерация документации из кода (Docstrings)&lt;&#x2F;li&gt;
&lt;li&gt;Кросс-референсы между проектами&lt;&#x2F;li&gt;
&lt;li&gt;Семантическая разметка&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.kernel.org&#x2F;&quot;&gt;Пример сайта: Linux Kernel&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Мое мнение&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;Sphinx — это самый зрелый и гибкий инструмент в списке, с помощью которого можно решить практически любую задачу. С другой стороны, процесс решения точно не будет простым — у этого инструмента очень крутая кривая обучения. Однако, это окупается впоследствии, если он оказывается в руках человека или команды, обладающих достаточными техническими навыками.&lt;&#x2F;p&gt;
&lt;p&gt;Spinx появился как инструмент для документирования кода на Python, но давно вышел за пределы экосистемы и получил множество новых применений. В отличие от остальных инструментов, он позволяет работать как с Markdown, так и с reStructuredText, для которого был изначально создан. Markdown обрабатывается с помощью MyST-Parser, что позволяет еще и выбрать, какие элементы как нужно обрабатывать.&lt;&#x2F;p&gt;
&lt;p&gt;Также Sphinx из коробки позволяет автоматически генерировать документацию из комментариев в коде, причем с помощью разных стилей таких комментариев. А еще поддерживает LaTeX, экспорт в PDF, множество разных способов отображения справочников, API, возможность включать фрагменты кода из других проектов...&lt;&#x2F;p&gt;
&lt;p&gt;В общем, Sphinx подойдет для любых возможных задач для любых крупных и средних проектов, но для проектов меньших масштабов или при отсутствии людей, которые в состоянии справиться с его сложностью, он может принести немало головной боли.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hugo&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#hugo&quot; aria-label=&quot;Anchor link for: hugo&quot;&gt;Hugo&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Разработчик и дата выпуска: Steve Francia, 2013 год | &lt;a href=&quot;https:&#x2F;&#x2F;gohugo.io&#x2F;&quot;&gt;Сайт&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Язык: Go&lt;&#x2F;li&gt;
&lt;li&gt;Сложность использования: Средняя. Требует понимания Go templates для кастомизации.&lt;&#x2F;li&gt;
&lt;li&gt;Документация и сообщество: Подробная документация, активное сообщество.&lt;&#x2F;li&gt;
&lt;li&gt;Локализация и версионирование: Встроенная многоязычность, версионирование через ветки.&lt;&#x2F;li&gt;
&lt;li&gt;Экосистема: Множество тем и shortcodes.&lt;&#x2F;li&gt;
&lt;li&gt;Переиспользование контента: Partial templates, shortcodes.&lt;&#x2F;li&gt;
&lt;li&gt;OpenAPI: Через внешние инструменты и shortcodes.&lt;&#x2F;li&gt;
&lt;li&gt;Поиск: Через интеграции (Algolia, Lunr).&lt;&#x2F;li&gt;
&lt;li&gt;Дополнительные преимущества:
&lt;ul&gt;
&lt;li&gt;Самая быстрая сборка среди SSG&lt;&#x2F;li&gt;
&lt;li&gt;Отличная производительность сайтов&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.ozon.ru&#x2F;common&quot;&gt;Пример сайта: Ozon Docs&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Мое мнение&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;Hugo лично у меня вызвал противоречивые чувства. Для работы он требует установки Go, а потом позволяет собирать сайты с помощью крошечного бинарника без внешних зависимостей — просто и элегантно. Скорость работы потрясающая, а с самого начала получается сделать красивый сайт стандартными средствами, в сам инструмент уже встроено практически все, что нужно для работы. Есть и свой парсер Markdown — Goldenmark, и shortcodes, с помощью которых можно легко переиспользовать контент и прочие атрибуты инструмента, который считается стандартом индустрии.&lt;&#x2F;p&gt;
&lt;p&gt;Но потом начинаются сложности, которые не дали мне как следует поисследовать Hugo в свободное время. После первых шагов хочется изучить возможности для кастомизации. Их у Hugo не просто много, а очень много. Вместо shortcodes можно использовать Partial templates, что требует понимания работы темплейтов в Go. Если темплейты Liquid (Jekyll, у Diplodoc аналогичный синтаксис) или Jinja2 мне оказались вполне понятны, то осмыслить темплейты в Go я так и не смог, хотя несколько раз пытался. Дальше появляются какие-то таксономии, функции, ресурсы страниц, хуки, модули и другие элементы.&lt;&#x2F;p&gt;
&lt;p&gt;Мне приходится поверить на слово, что это отличный инструмент. Мне понравился тестовый проект, но я сомневаюсь, что без разработчиков, владеющих Go, его можно без проблем использовать в продакшене.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;jekyll&quot;&gt;&lt;a class=&quot;zola-anchor&quot; href=&quot;#jekyll&quot; aria-label=&quot;Anchor link for: jekyll&quot;&gt;Jekyll&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;Разработчик и дата выпуска: Tom Preston-Werner (GitHub), 2008 год | &lt;a href=&quot;https:&#x2F;&#x2F;jekyllrb.com&#x2F;&quot;&gt;Сайт&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Язык: Ruby&lt;&#x2F;li&gt;
&lt;li&gt;Сложность использования: Низкая для базового использования, средняя для кастомизации.&lt;&#x2F;li&gt;
&lt;li&gt;Документация и сообщество: Хорошая документация, большое устоявшееся сообщество.&lt;&#x2F;li&gt;
&lt;li&gt;Локализация и версионирование: Базовая поддержка.&lt;&#x2F;li&gt;
&lt;li&gt;Экосистема: Множество плагинов и тем, особенно для блогов.&lt;&#x2F;li&gt;
&lt;li&gt;Переиспользование контента: Includes, layouts.&lt;&#x2F;li&gt;
&lt;li&gt;OpenAPI: Через плагины и интеграции.&lt;&#x2F;li&gt;
&lt;li&gt;Поиск: Через плагины (Lunr, Algolia).&lt;&#x2F;li&gt;
&lt;li&gt;Дополнительные преимущества:
&lt;ul&gt;
&lt;li&gt;Нативная интеграция с GitHub Pages&lt;&#x2F;li&gt;
&lt;li&gt;Простота использования&lt;&#x2F;li&gt;
&lt;li&gt;Большое количество готовых тем&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;deckhouse.ru&#x2F;products&#x2F;kubernetes-platform&#x2F;documentation&#x2F;v1&#x2F;&quot;&gt;Пример сайта: Deckhouse&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Мое мнение&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;Это был первый генератор статических сайтов, который я попробовал использовать, причем сделал это я еще до того как официально стал техническим писателем. В то время Ruby on Rails еще не вызывал удивления, и я с удовольствием поставил его себе в систему, ознакомился с концепцией Gems и сделал свой первый статический сайт (вроде бы блог). Не то чтобы это было просто, но результат мне вполне понравился.&lt;&#x2F;p&gt;
&lt;p&gt;Jekyll создавался в комьюнити Ruby, практически одновременно с GitHub, и они всегда были тесно связаны. Вы ведь наверняка неоднократно указывали &lt;code&gt;.nojekyll&lt;&#x2F;code&gt; при развертывании на GitHub Pages, правда? В те времена люди умели писать простую и понятную документацию, и руководства по Jekyll до сих пор остаются для меня примером.&lt;&#x2F;p&gt;
&lt;p&gt;За годы присутствия на рынке Jekyll популяризовал то, что потом использовалось в десятках других генераторов — Front Matter, шаблоны Liquid, includes и многое другое. Отличительной чертой Jekyll всегда была простота, которая до сих пор впечатляет, а наработки сообщества предлагают широкий выбор для кастомизации сайта.&lt;&#x2F;p&gt;
&lt;p&gt;Сейчас Jekyll редко является очевидным выбором для новых проектов. Он фактически прекратил развиваться, а сам Ruby из модного языка с крупным сообществом стал скорее экзотикой. Появились новые подходы и новые инструменты, предлагающие другие возможности, но классика всегда останется классикой.&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
